{"ast":null,"code":"var _jsxFileName = \"/workspace/nodejs/frontend/src/components/AddProduct.js\";\nimport Axios from \"axios\";\nimport React, { Component } from \"react\";\nimport { Button, Form } from \"react-bootstrap\";\nimport { Input } from \"reactstrap\";\nimport { toast } from \"react-toastify\";\nexport default class AddProduct extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      count: 0\n    };\n\n    this.handler = event => {\n      this.setState({\n        [event.target.name]: event.target.value.toLowerCase()\n      });\n    };\n\n    this.validURL = str => {\n      var pattern = new RegExp(\"^(https?:\\\\/\\\\/)?\" + // protocol\n      \"((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.)+[a-z]{2,}|\" + // domain name\n      \"((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))\" + // OR ip (v4) address\n      \"(\\\\:\\\\d+)?(\\\\/[-a-z\\\\d%_.~+]*)*\" + // port and path\n      \"(\\\\?[;&a-z\\\\d%_.~+=-]*)?\" + // query string\n      \"(\\\\#[-a-z\\\\d_]*)?$\", \"i\"); // fragment locator\n\n      return !!pattern.test(str);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }\n    }, \"Add Product\"), /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"name\",\n      onChange: this.handler,\n      value: this.state.name,\n      placeholder: \"Product Name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Input, {\n      type: \"number\",\n      name: \"price\",\n      onChange: this.handler,\n      value: this.state.price,\n      placeholder: \"price\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Input, {\n      type: \"textarea\",\n      name: \"desc\",\n      onChange: this.handler,\n      value: this.state.desc,\n      placeholder: \"Description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"pic\",\n      onChange: this.handler,\n      value: this.state.pic,\n      placeholder: \"Image URL\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      onClick: () => {\n        if (this.validURL(this.state.pic)) {\n          Axios.post(\"http://localhost:5000/prohub/addProduct\", this.state).then(res => alert(\"success\")).catch(err => alert(err));\n        } else {\n          alert(\"Invalid Product Data\");\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }\n    }, \"Add\"));\n  }\n\n}","map":{"version":3,"sources":["/workspace/nodejs/frontend/src/components/AddProduct.js"],"names":["Axios","React","Component","Button","Form","Input","toast","AddProduct","state","count","handler","event","setState","target","name","value","toLowerCase","validURL","str","pattern","RegExp","test","render","price","desc","pic","post","then","res","alert","catch","err"],"mappings":"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","sourcesContent":["import Axios from \"axios\";\r\nimport React, { Component } from \"react\";\r\nimport { Button, Form } from \"react-bootstrap\";\r\nimport { Input } from \"reactstrap\";\r\nimport { toast } from \"react-toastify\";\r\nexport default class AddProduct extends Component {\r\n  state = { count: 0 };\r\n  handler = (event) => {\r\n    this.setState({ [event.target.name]: event.target.value.toLowerCase() });\r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n        <h1>Add Product</h1>\r\n        <Form>\r\n          <Input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            onChange={this.handler}\r\n            value={this.state.name}\r\n            placeholder=\"Product Name\"\r\n          />\r\n          <Input\r\n            type=\"number\"\r\n            name=\"price\"\r\n            onChange={this.handler}\r\n            value={this.state.price}\r\n            placeholder=\"price\"\r\n          />\r\n          <Input\r\n            type=\"textarea\"\r\n            name=\"desc\"\r\n            onChange={this.handler}\r\n            value={this.state.desc}\r\n            placeholder=\"Description\"\r\n          />\r\n          <Input\r\n            type=\"text\"\r\n            name=\"pic\"\r\n            onChange={this.handler}\r\n            value={this.state.pic}\r\n            placeholder=\"Image URL\"\r\n          />\r\n        </Form>\r\n        <Button\r\n          onClick={() => {\r\n            if (this.validURL(this.state.pic)) {\r\n              Axios.post(\"http://localhost:5000/prohub/addProduct\", this.state)\r\n                .then((res) => alert(\"success\"))\r\n                .catch((err) => alert(err));\r\n            } else {\r\n              alert(\"Invalid Product Data\")\r\n            }\r\n          }}\r\n        >\r\n          Add\r\n        </Button>\r\n      </>\r\n    );\r\n  }\r\n  validURL = (str) => {\r\n    var pattern = new RegExp(\r\n      \"^(https?:\\\\/\\\\/)?\" + // protocol\r\n        \"((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.)+[a-z]{2,}|\" + // domain name\r\n        \"((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))\" + // OR ip (v4) address\r\n        \"(\\\\:\\\\d+)?(\\\\/[-a-z\\\\d%_.~+]*)*\" + // port and path\r\n        \"(\\\\?[;&a-z\\\\d%_.~+=-]*)?\" + // query string\r\n        \"(\\\\#[-a-z\\\\d_]*)?$\",\r\n      \"i\"\r\n    ); // fragment locator\r\n    return !!pattern.test(str);\r\n  };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}